# Copyright 2017 AT&T Intellectual Property.  All other rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

images:
  tags:
    etcd: quay.io/coreos/etcd:v3.2.18
    etcdctl: quay.io/coreos/etcd:v3.2.18
  pull_policy: "IfNotPresent"

labels:
  anchor:
    node_selector_key: etcd-example
    node_selector_value: enabled

anchor:
  dns_policy: ClusterFirstWithHostNet
  etcdctl_endpoint: example-etcd
  host_data_path: /var/lib/etcd/example

  kubelet:
    manifest_path: /etc/kubernetes/manifests

  period: 15
  health_wait_period: 60

etcd:
  host_etc_path: /etc/etcd-example
  host_data_path: /var/lib/etcd/example
  cleanup_data: true

backup:
  host_backup_path: /var/lib/etcd/backup
  backup_log_file: /var/log/etcd-backup.log
  no_backup_keep: 10
  etcdctl_dial_timeout: 15s

network:
  service_client:
    name: service_client
    port: 2379
    target_port: 2379
    enable_node_port: false
  service_peer:
    name: service_peer
    port: 2380
    target_port: 2380
    enable_node_port: false

service:
  name: example-etcd
  ip: null

bootstrapping:
  enabled: false
  host_directory: /var/lib/anchor/etcd-example
  filename: bootstrap
  # XXX Can I just generalize to an anchor timeout?
  timeout: 300

secrets:
  tls:
    client:
      ca: placeholder
    peer:
      ca: placeholder
  anchor:
    tls:
      cert: placeholder
      key: placeholder

nodes:
  - name: example-0
    tls:
      client:
        cert: placeholder
        key: placeholder
      peer:
        cert: placeholder
        key: placeholder

dependencies:
   static:
     etcd_backup:
       jobs:
         - etcd_backup_job
pod:
  mounts:
    daemonset_anchor:
      daemonset_anchor:
  replicas:
    apiserver: 3
  lifecycle:
    upgrades:
      daemonsets:
        pod_replacement_strategy: RollingUpdate
        anchor:
          enabled: false
          min_ready_seconds: 0
          max_unavailable: 1
    termination_grace_period:
      daemonset_anchor:
        timeout: 3600
  resources:
    enabled: false
    daemonset_anchor:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    etcd_pod:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "2000m"
    test:
      limits:
        memory: "128Mi"
        cpu: "100m"
      requests:
        memory: "128Mi"
        cpu: "100m"
    jobs:
      etcdbackup:
        limits:
          memory: "128Mi"
          cpu: "100m"
        requests:
          memory: "128Mi"
          cpu: "100m"

livenessProbe:
  config:
    failureThreshold: 10
    initialDelaySeconds: 15
    periodSeconds: 30

readinessProbe:
  config:
    failureThreshold: 10
    initialDelaySeconds: 15
    periodSeconds: 30

jobs:
  etcd_backup:
    cron: "0 */12 * * *"
    history:
      success: 3
      failed: 1

manifests:
  configmap_bin: true
  configmap_certs: true
  configmap_etc: true
  daemonset_anchor: true
  secret: true
  service: true
  test_etcd_health: true
  cron_etcd_backup: true
